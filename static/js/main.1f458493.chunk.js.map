{"version":3,"sources":["components/atoms/ezlint-icon.tsx","components/templates/Layout.tsx","lib/plugins/jest.ts","lib/plugins/prettier.ts","lib/plugins/react.ts","lib/plugins/react-hooks.ts","lib/plugins/typescript.ts","lib/plugins/index.ts","components/organisms/SearchThingy.tsx","components/pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["EzLintIcon","props","SvgIcon","id","stroke","strokeWidth","fill","fillRule","transform","points","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","container","width","display","boxSizing","marginLeft","padding","minHeight","breakpoints","up","Layout","children","classes","history","useHistory","navigateHome","useCallback","push","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","viewBox","Typography","variant","jest","name","order","plugins","extendsConfigs","dependencies","prettier","optionalExtends","if","include","react","reactHooks","typescript","list","marginTop","SearchThingy","useState","selectedOptions","setSelectedOptions","options","listLibraries","map","v","create","join","Grid","item","alignItems","justify","xs","Autocomplete","multiple","getOptionLabel","option","onChange","e","values","renderInput","params","TextField","label","Button","fullWidth","disabled","length","margin","Home","direction","style","height","gutterBottom","App","createMuiTheme","palette","primary","main","ThemeProvider","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1f458493.chunk.js","sourcesContent":["import React from 'react';\nimport { SvgIcon, SvgIconProps } from '@material-ui/core';\n\n// SVG received from Nemanja\nexport const EzLintIcon = (props: SvgIconProps) => (\n  <SvgIcon {...props}>\n    <g\n      id=\"Material-Design-Stickersheet\"\n      stroke=\"none\"\n      strokeWidth=\"1\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    >\n      <g\n        id=\"Desktop-HD\"\n        transform=\"translate(-59.000000, -26.000000)\"\n        fill=\"currentColor\"\n        fillRule=\"nonzero\"\n      >\n        <g id=\"Group-3\" transform=\"translate(59.000000, 26.000000)\">\n          <polygon\n            id=\"Path\"\n            points=\"21.350365 27 35 14.3630137 35 12.6369863 21.350365 0 18.1240876 3.32876712 29.1058394 13.5 18 23.6712329\"\n          ></polygon>\n          <polygon\n            id=\"Path\"\n            transform=\"translate(8.500000, 19.500000) scale(-1, -1) translate(-8.500000, -19.500000) \"\n            points=\"3.35036496 33 17 20.3630137 17 18.6369863 3.35036496 6 0.124087591 9.32876712 11.1058394 19.5 0 29.6712329\"\n          ></polygon>\n        </g>\n      </g>\n    </g>\n  </SvgIcon>\n);\n","import React, { useCallback } from 'react';\nimport {\n  AppBar,\n  createStyles,\n  IconButton,\n  Theme,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\nimport { EzLintIcon } from '../atoms/ezlint-icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    container: {\n      width: '100%',\n      display: 'block',\n      boxSizing: 'border-box',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      padding: theme.spacing(2),\n      minHeight: `calc(100% - ${theme.spacing(8)}px)`,\n      [theme.breakpoints.up('sm')]: {\n        padding: theme.spacing(4),\n      },\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n  })\n);\n\nexport const Layout: React.FC<any> = ({ children }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const navigateHome = useCallback(() => {\n    history.push('/');\n  }, [history]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"icon\"\n          >\n            <EzLintIcon onClick={navigateHome} viewBox=\"0 0 35 33\" />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            EZLINT\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.container}>{children}</div>\n    </div>\n  );\n};\n","import { LibraryConfig } from '../interfaces/library-config';\n\n/**\n * https://www.npmjs.com/package/eslint-plugin-jest\n */\nexport const jest: LibraryConfig = {\n  name: 'Jest',\n  order: 'normal',\n  plugins: ['jest'],\n  extendsConfigs: ['ezlint/jest', 'plugin:jest/recommended'],\n  dependencies: ['eslint-plugin-jest'],\n};\n\nexport default jest;\n","import { LibraryConfig } from '../interfaces/library-config';\n\n/**\n * https://www.npmjs.com/package/eslint-config-prettier\n */\nexport const prettier: LibraryConfig = {\n  name: 'Prettier',\n  order: 'late',\n  plugins: [],\n  extendsConfigs: ['prettier'],\n  optionalExtends: [\n    {\n      if: '@typescript-eslint',\n      include: 'prettier/@typescript-eslint',\n    },\n  ],\n  dependencies: ['eslint-config-prettier'],\n};\n\nexport default prettier;\n","import { LibraryConfig } from '../interfaces/library-config';\n\n/**\n * https://www.npmjs.com/package/eslint-plugin-react\n */\nexport const react: LibraryConfig = {\n  name: 'React',\n  order: 'normal',\n  plugins: ['react'],\n  extendsConfigs: ['plugin:react/recommended'],\n  dependencies: ['eslint-plugin-react'],\n};\n\nexport default react;\n","import { LibraryConfig } from '../interfaces/library-config';\n\n/**\n * https://www.npmjs.com/package/eslint-plugin-react-hooks\n */\nexport const reactHooks: LibraryConfig = {\n  name: 'React Hooks',\n  order: 'normal',\n  plugins: ['react-hooks'],\n  extendsConfigs: ['plugin:react-hooks/recommended'],\n  dependencies: ['eslint-plugin-react-hooks'],\n};\n\nexport default reactHooks;\n","import { LibraryConfig } from '../interfaces/library-config';\n\n/**\n * https://www.npmjs.com/package/@typescript-eslint/eslint-plugin\n */\nexport const typescript: LibraryConfig = {\n  name: 'Typescript',\n  order: 'normal',\n  plugins: ['@typescript-eslint'],\n  extendsConfigs: ['plugin:@typescript-eslint/recommended'],\n  dependencies: [\n    'typescript',\n    '@typescript-eslint/parser',\n    '@typescript-eslint/eslint-plugin',\n  ],\n};\n\nexport default typescript;\n","import jest from './jest';\nimport prettier from './prettier';\nimport react from './react';\nimport reactHooks from './react-hooks';\nimport typescript from './typescript';\n\nexport const list = [jest, prettier, react, reactHooks, typescript];\n\nexport default {\n  jest,\n  prettier,\n  react,\n  reactHooks,\n  typescript,\n};\n","import React, { useCallback, useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nimport { list as listLibraries } from '../../lib/plugins';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      'width': 500,\n      '& > * + *': {\n        marginTop: theme.spacing(3),\n      },\n    },\n  })\n);\n\n// sample taken from https://material-ui.com/components/autocomplete/#multiple-values\nconst SearchThingy = () => {\n  const classes = useStyles();\n  const [selectedOptions, setSelectedOptions] = useState<string[]>([]);\n  const options = listLibraries.map((v) => v.name);\n  const history = useHistory();\n\n  const create = useCallback(() => {\n    history.push('/results?selection=' + selectedOptions.join(','));\n  }, [history, selectedOptions]);\n\n  return (\n    <Grid container item alignItems=\"center\" justify=\"center\" spacing={2}>\n      <Grid item xs={4}>\n        <Autocomplete\n          multiple\n          id=\"tags-standard\"\n          options={options}\n          getOptionLabel={(option) => option}\n          onChange={(e, values) => setSelectedOptions(values)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              variant=\"standard\"\n              label=\"Framework/library/plugin/...\"\n            />\n          )}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={create}\n          disabled={selectedOptions.length === 0}\n        >\n          Create\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SearchThingy;\n","import { Grid, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { EzLintIcon } from '../atoms/ezlint-icon';\nimport SearchThingy from '../organisms/SearchThingy';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(8, 0),\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      spacing={6}\n      className={classes.root}\n      direction=\"column\"\n    >\n      <Grid item>\n        <EzLintIcon\n          style={{ color: '#000', width: '64px', height: '64px' }}\n          viewBox=\"0 0 35 33\"\n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h5\" gutterBottom>\n          Create ESLint configuration for your project\n        </Typography>\n      </Grid>\n      <SearchThingy />\n    </Grid>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport { Layout } from './components/templates/Layout';\nimport Home from './components/pages/Home';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#1d1d1b',\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        {/* import other stuff here */}\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Layout>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}